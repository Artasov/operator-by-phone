version: '3.9'

services:

  postgres:
    container_name: app_postgres
    hostname: postgres
    image: postgres:17-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data
    #      - ./pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h localhost" ]
      timeout: 5s
      retries: 10
      start_period: 5s
    networks:
      - net

  redis:
    container_name: app_redis
    hostname: redis
    image: redis:alpine
    restart: always
    volumes:
      - ./data/redis/:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 60s
      timeout: 5s
      retries: 10
      start_period: 5s
    networks:
      - net

  web:
    env_file:
      - '.env'
    container_name: app_web
    hostname: web
    build:
      context: .
      dockerfile: Dockerfile
      target: web
    environment:
      - LOG_PREFIX=web
    volumes:
      - ./data:/srv/data
      - ./logs:/srv/logs
    ports:
      - "8000:8000"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:8000/health/ || exit 1" ]
      timeout: 30s
      retries: 10
      start_period: 5s
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - net
    cap_add:
      - SYS_TIME

  celery:
    env_file:
      - '.env'
    container_name: app_celery
    hostname: celery
    build:
      context: .
      dockerfile: Dockerfile
      target: celery
    volumes:
      - ./data:/srv/data
      - ./logs:/srv/logs
      - ./entrypoint_celery.sh:/srv/entrypoint_celery.sh
    links:
      - redis
    environment:
      - LOG_PREFIX=celery
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
    networks:
      - net

  beat:
    env_file:
      - '.env'
    container_name: app_beat
    hostname: beat
    build:
      context: .
      dockerfile: Dockerfile
      target: beat
    volumes:
      - ./data:/srv/data
      - ./logs:/srv/logs
      - ./entrypoint_beat.sh:/srv/entrypoint_beat.sh
    links:
      - redis
    environment:
      - LOG_PREFIX=celery
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
    networks:
      - net

networks:
  net:
    driver: bridge
